{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/nav.js","webpack://gatsby-starter-default/./src/layouts/basic.js","webpack://gatsby-starter-default/./src/pages/blog.js"],"names":["Nav","data","useStaticQuery","display","site","siteMetadata","items","allNavbarYaml","nodes","NavBar","NavBrand","title","NavMenu","NavStart","children","className","class","substring","map","item","index","link","to","name","href","Full","Layout","Section","Blog","allMarkdownRemark","totalCount","edges","node","key","id","fields","slug","frontmatter","date","excerpt"],"mappings":"2LAIe,SAASA,IAEpB,IAAMC,GAAOC,QAAe,cAiBpBC,EAAYF,EAAKG,KAAKC,aAAtBF,QACFG,EAAQL,EAAKM,cAAcC,MAEjC,OACI,gBAACC,EAAD,KACE,gBAACC,EAAD,CAAUC,MAAOR,IACjB,gBAACS,EAAD,KACE,gBAACC,EAAD,CAAUP,MAAOA,MAM7B,SAASG,EAAT,GAAgC,IAAbK,EAAY,EAAZA,SACf,OACI,uBAAKC,UAAU,qBACVD,GAKb,SAASJ,EAAT,GAA+B,IAAVC,EAAS,EAATA,MACjB,OACI,uBAAKI,UAAU,gBACX,uBAAKA,UAAU,yBACX,0BAAI,wBAAMC,MAAM,aAAaL,EAAMM,UAAU,EAAE,IAAU,wBAAMD,MAAM,aAAaL,EAAMM,UAAU,EAAE,KAAW,wBAAMD,MAAM,aAAaL,EAAMM,UAAU,GAAG,QAM3K,SAASL,EAAT,GAAiC,IAAbE,EAAY,EAAZA,SAChB,OACI,uBAAKC,UAAU,oCAAoCD,GAI3D,SAASD,EAAT,GAA+B,IAAVP,EAAS,EAATA,MACjB,OACI,uBAAKS,UAAU,gBACVT,EAAMY,KAAI,SAACC,EAAMC,GACd,MAAqB,MAAjBD,EAAKE,KAAK,GAEN,gBAAC,KAAD,CACIC,GAAIH,EAAKE,KACTN,UAAU,eAETI,EAAKI,MAKV,qBAAGC,KAAML,EAAKE,KAAMN,UAAU,eAAeI,EAAKI,Y,2FCvE3D,SAASE,EAAT,GAA6B,IAAbX,EAAY,EAAZA,SAC7B,OACE,gBAACY,EAAD,KACE,gBAACC,EAAD,KAAUb,IAKT,SAASY,EAAT,GAA+B,IAAbZ,EAAY,EAAZA,SACvB,OACE,gCACE,gBAAC,IAAD,MACCA,GAKA,SAASa,EAAT,GAAgC,IAAbb,EAAY,EAAZA,SACxB,OACE,2BAASC,UAAU,WACjB,uBAAKA,UAAU,aACb,uBAAKA,UAAU,WACb,uBAAKA,UAAU,UACZD,Q,gHCvBE,SAASc,EAAT,GAAwB,IAAR3B,EAAO,EAAPA,KAC3B,OACI,gBAAC,KAAD,KACI,uBAAKc,UAAU,WACX,sBAAIA,UAAU,wBAAd,QACA,yBAAId,EAAK4B,kBAAkBC,WAA3B,UACC7B,EAAK4B,kBAAkBE,MAAMb,KAAI,gBAAEc,EAAF,EAAEA,KAAF,OAC9B,uBAAKhB,MAAM,6BAA6BiB,IAAKD,EAAKE,IAC9C,gBAAC,KAAD,CAAMZ,GAAIU,EAAKG,OAAOC,MAClB,0BAAKJ,EAAKK,YAAY1B,MAAO,IAA7B,MAAqCqB,EAAKK,YAAYC,OAE1D,yBAAIN,EAAKO","file":"component---src-pages-blog-js-4cacfd8dfb194aca000a.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport { string } from \"prop-types\"\r\n\r\nexport default function Nav() {\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query {\r\n        site {\r\n          siteMetadata {\r\n            display\r\n          }\r\n        }\r\n    \r\n        allNavbarYaml {\r\n          nodes {\r\n            name\r\n            link\r\n          }\r\n        }\r\n      }\r\n    `)\r\n\r\n    const { display } = data.site.siteMetadata\r\n    const items = data.allNavbarYaml.nodes\r\n\r\n    return (\r\n        <NavBar>\r\n          <NavBrand title={display}></NavBrand>\r\n          <NavMenu>\r\n            <NavStart items={items}></NavStart>\r\n          </NavMenu>\r\n        </NavBar>\r\n      )\r\n}\r\n\r\nfunction NavBar ({ children }) {\r\n    return (\r\n        <div className=\"navbar is-primary\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NavBrand ({ title }) {\r\n    return (\r\n        <div className=\"navbar-brand\">\r\n            <div className=\"navbar-item is-size-5\">\r\n                <h1><span class=\"glow_blue\">{title.substring(0,1)}</span><span class=\"glow_pink\">{title.substring(1,11)}</span><span class=\"glow_blue\">{title.substring(11,12)}</span></h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction NavMenu ({ children }) {\r\n    return (\r\n        <div className=\"navbar-menu is-active is-primary\">{children}</div>\r\n    )\r\n}\r\n\r\nfunction NavStart ({ items }) {\r\n    return (\r\n        <div className=\"navbar-start\">\r\n            {items.map((item, index) => {\r\n                if (item.link[0] === \"/\") {\r\n                    return (\r\n                        <Link\r\n                            to={item.link}\r\n                            className=\"navbar-item\"\r\n                        >\r\n                            {item.name}\r\n                        </Link>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <a href={item.link} className=\"navbar-item\">{item.name}</a>\r\n                    )\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\"\r\nimport \"../styles/global.scss\"\r\nimport Nav from \"../components/nav\"\r\n\r\nexport default function Full({ children }) {\r\n  return (\r\n    <Layout>\r\n      <Section>{children}</Section>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport function Layout({ children }) {\r\n  return (\r\n    <>\r\n      <Nav />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport function Section({ children }) {\r\n  return (\r\n    <section className=\"section\">\r\n      <div className=\"container\">\r\n        <div className=\"columns\">\r\n          <div className=\"column\">\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}","import React from \"react\"\r\nimport Full from \"../layouts/basic\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nexport default function Blog ({data}) {\r\n    return (\r\n        <Full>\r\n            <div className=\"content\">\r\n                <h1 className=\"title has-text-white\">Blog</h1>\r\n                <p>{data.allMarkdownRemark.totalCount} Posts</p> \r\n                {data.allMarkdownRemark.edges.map(({node}) => (\r\n                    <div class=\"box has-background-primary\" key={node.id}>\r\n                        <Link to={node.fields.slug}>\r\n                            <h3>{node.frontmatter.title}{\" \"} - {node.frontmatter.date}</h3>\r\n                        </Link>\r\n                        <p>{node.excerpt}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Full>\r\n    )\r\n}\r\n\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}